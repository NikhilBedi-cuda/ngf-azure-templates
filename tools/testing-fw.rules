RuleSet{
	name={}
	readOnly={0}
	origin={}
	global={0}
	comment={}
	objrenamed={0}
	baseid={0}
	incid={1}
	featureLevel={16}
	useAppRules={0}
	id={}
	transobj={7.1.1.1}
	creator={}
	localCascade={0}
	allowRID={0}
	allowAppRules={0}
	prefixmatch={
	}
	rulesettype={}
	loadsets={}
	name={}
	readOnly={0}
	origin={}
	global={0}
	comment={}
	netprefixobj={
	}
	netprefixobj6={
	}
	netobj={
		NetSet{
			name={Any}
			readOnly={0}
			origin={}
			global={0}
			comment={All IPv4 addresses}
			list={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={0.0.0.0/32}
				}
			}
			neglist={
			}
		}
		NetSet{
			name={Internet}
			readOnly={0}
			origin={}
			global={0}
			comment={All routed IPv4 addresses}
			list={
				NetRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			neglist={
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={10.0.0.0/24}
				}
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={172.16.0.0/20}
				}
				NetEntry{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					addr={192.168.0.0/16}
				}
			}
		}
		NetESet{
			name={CloudBox.PrivateIp}
			readOnly={1}
			origin={}
			global={0}
			comment={on-demand external object}
			extlist={
				ExtDef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sourceType={boxconf}
					sourceFile={external.cloudbox.privateip.conf}
					sectionPattern={/}
					addrKey={ip}
					maskKey={}
					encoding={addr}
					conditions={}
				}
			}
		}
	}
	srvobj={
		ServiceSet{
			name={FTP}
			readOnly={0}
			origin={}
			global={0}
			comment={FTP using plugin module}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 21}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={ftp}
					srvText={ftp}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={16777216,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={FTPS}
			readOnly={0}
			origin={}
			global={0}
			comment={Implicit FTPS using FTP firewall plugin. SSL Interception required.}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 990}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={ftp}
					srvText={ftp}
					detectAllowBits2={16777216,0,0,0,0}
				}

			}
		}
		ServiceSet{
			name={RCMD}
			readOnly={0}
			origin={}
			global={0}
			comment={Remote shell, remote exec, and remote login services}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 514}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={512}
					topClientPort={1023}
					ownProc={0}
					pluginModule={rsh}
					srvText={rsh}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 512}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={512}
					topClientPort={1023}
					ownProc={0}
					pluginModule={}
					srvText={rexec}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 513}
					sessionTimeout={86400}
					balancedTimeout={0}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={rlogin}
				}

			}
		}
		ServiceSet{
			name={Any-TCP}
			readOnly={0}
			origin={}
			global={0}
			comment={All TCP ports}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={FTP connection with plugin module}
					ref={FTP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={FTPS connection with plugin module}
					ref={FTPS}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={RCMD}
				}

				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ *}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
				}

			}
		}
		ServiceSet{
			name={Any-UDP}
			readOnly={0}
			origin={}
			global={0}
			comment={All UDP ports}
			list={
				ServiceEntryUDP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ *}
					sessionTimeout={60}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={2048}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 udpReversedAny={0}
				}

			}
		}
		ServiceSet{
			name={ICMP}
			readOnly={0}
			origin={}
			global={0}
			comment={ICMP-ECHO service limited to 10000 bytes and 10ms interval}
			list={
				ServiceEntryEcho{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					sessionTimeout={20}
					balancedTimeout={10}
					 minDelay={10}
					 maxSize={10000}
				}

			}
		}
		ServiceSet{
			name={Any}
			readOnly={0}
			origin={}
			global={0}
			comment={All TCP, UDP, and ICMP services and other IP protocols}
			list={
				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any-TCP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any-UDP}
				}

				ServiceRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={ICMP}
				}

				ServiceEntryOther{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={}
					sessionTimeout={120}
					balancedTimeout={120}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					 proto={0}
				}

			}
		}
		ServiceSet{
			name={HTTP}
			readOnly={0}
			origin={}
			global={0}
			comment={HTTP service}
			list={
				ServiceEntryTCP{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					portLimit={ 80}
					sessionTimeout={86400}
					balancedTimeout={20}
					writeTimeout={60}
					botClientPort={1024}
					topClientPort={65535}
					ownProc={0}
					pluginModule={}
					srvText={http}
					detectPolicy={1}
					listingPolicy={0}
					detectAllowBits2={524288,0,0,0,0}
				}

			}
		}
	}
	appobj={
	}
	contentobj={
	}
	protoobj={
	}
	filterobj={
	}
	filtergroupobj={
	}
	parpobj={
	}
	devgroupobj={
		DevGroup{
			name={Matching}
			readOnly={0}
			origin={}
			global={0}
			comment={Select this object to make use of IP spoofing protection.}
			list={match}
		}
	}
	icmpparamobj={
	}
	connobj={
		ConnStd{
			name={Dynamic NAT}
			readOnly={0}
			origin={}
			global={0}
			comment={Source NAT using local IP address obtained from a routing lookup to the destination}
			connTimeout={30}
			connIPType={PROXY_DYNAMIC}
			connIP={0.0.0.0}
			device={}
			connMask={0}
			samePort={0}
			cycleType={0}
			cyclePrimWeight={1}
		}
		ConnStd{
			name={Original Source IP}
			readOnly={0}
			origin={}
			global={0}
			comment={Connection is established using the original source IP.}
			connTimeout={30}
			connIPType={CLIENT}
			connIP={0.0.0.0}
			device={}
			connMask={0}
			samePort={1}
			cycleType={0}
			cyclePrimWeight={1}
		}
	}
	rules={
		Rule{
			name={InboundHealtCheck}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={InboundHealtCheck:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Internet}
				}
			}
			dstExplicit={
				NetSet{
					name={InboundHealtCheck:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetEntry{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							addr={172.16.136.5}
						}
						NetEntry{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							addr={172.16.136.7}
						}
					}
					neglist={
					}
				}
			}
			srvExplicit={
				ServiceSet{
					name={InboundHealtCheck:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						ServiceEntryTCP{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							portLimit={ 65500}
							sessionTimeout={86400}
							balancedTimeout={0}
							writeTimeout={60}
							botClientPort={1024}
							topClientPort={65535}
							ownProc={0}
							pluginModule={}
						}

					}
				}
			}
			app={
				AppRef{
					name={InboundHealtCheck:app}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionLocalRedirect{
					name={InboundHealtCheck:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					addr={127.0.0.1:450}
					proxyArp={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
			appPolicyBits={6}
		}
		Rule{
			name={OutboundLNX}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			srcExplicit={
				NetSet{
					name={OutboundLNX:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					list={
						NetEntry{
							name={}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							addr={172.16.137.0/8}
						}
					}
					neglist={
					}
				}
			}
			dst={
				NetRef{
					name={OutboundLNX:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Internet}
				}
			}
			srv={
				ServiceRef{
					name={OutboundLNX:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Any}
				}
			}
			app={
				AppRef{
					name={OutboundLNX:app}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionPass{
					name={OutboundLNX:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={OutboundLNX:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Dynamic NAT}
						}
					}
					bothWays={0}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
		Rule{
			name={InboundHTTP}
			readOnly={0}
			origin={}
			global={0}
			comment={}
			src={
				NetRef{
					name={InboundHTTP:src}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Internet}
				}
			}
			dst={
				NetRef{
					name={InboundHTTP:dst}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={CloudBox.PrivateIp}
				}
			}
			srv={
				ServiceRef{
					name={InboundHTTP:srv}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={HTTP}
				}
			}
			app={
				AppRef{
					name={InboundHTTP:app}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			action={
				ActionRedirect{
					name={InboundHTTP:action}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					eventLevel={-1}
					conn={
						ConnRef{
							name={InboundHTTP:action:conn}
							readOnly={0}
							origin={}
							global={0}
							comment={}
							ref={Original Source IP}
						}
					}
					ipList={0 172.16.137.4}
					proxyArp={0}
					criticalPort={}
				}
			}
			parp={
				PARPRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			filtergroup={
				FilterGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={}
				}
			}
			devgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			revdevgroup={
				DevGroupRef{
					name={}
					readOnly={0}
					origin={}
					global={0}
					comment={}
					ref={Matching}
				}
			}
			aclService={}
			devBlock={1}
			srcBlock={0}
			dstBlock={0}
			srvBlock={0}
			userBlock={0}
			macBlock={0}
			deactivated={0}
			timeAllow={0,0,0,0,0,0,0,0}
			dynamic={0}
			usesocket={0}
			protipPolicy={0}
			clearDF={0}
			noSync={0}
			noACache={0}
			noLog={0}
			noStat={0}
			logState={0}
			lastackTimeout={10}
			acceptTimeout={10}
			retransTimeout={300}
			durationTimeout={0}
			halfsideTimeout={30}
			noNagle={0}
			ownLog={0}
			logPolicy={0}
			ridType={0}
			rid={-1}
			resolveSrv={0}
			priority={0}
			ignoreGlobalMaxInst={0}
			maxInst={0}
			maxInstSrc={0}
			acceptPolicy={0}
			reversePolicy={0}
			matchIF={0}
		}
	}
	testobj={
	}
	subsets={
	}
	sublists={
	}
}
